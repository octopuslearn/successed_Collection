C51 COMPILER V9.54   MAIN                                                                  11/07/2023 00:06:31 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\app\keilc51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg51.h"
   2          #include "lcd.h"
   3          
   4          #include "math.h"
   5          #define PI 3.14159
   6          
   7          
   8          #define  Key_Net    P1  ////列
   9          #define Key_P2    P2
  10          //uchar code num[]="0123456789ABCDEF" ;
  11          //uchar code number[]={7,8,9,(x),4,5,6,(-),1,2,3,(+),0,off,=,/};//保存显示的数据
  12          //uchar code number[]={1,2,3,0x2b-0x30(+), 4,5,6,0x2d-0x30(-), 7,8,9,0x2a-0x30(*), 0,0x01-0x30(clr),0x3d-0
             -x30(=),0x2b-0x30(/)};//保存显示的数据
  13          //uchar code number[]={
  14          //1,2,3,0x2b-0x30, 
  15          //4,5,6,0x2d-0x30,
  16          //7,8,9,0x2a-0x30,
  17          //0,0x01-0x30,0x3d-0x30,0x2f-0x30 };
  18          
  19          //uchar code number[19]={
  20          //  1,2,3,0,  '+','-','*','/',
  21          //  4,5,6,'^','s','c','=','e',    
  22          //  7,8,9,  
  23          //};
  24          
  25          uchar code number[19]={
  26            1,2,3,0,  0x2b-0x30,0x2d-0x30,0x2a-0x30,0x2f-0x30,
  27            4,5,6,0x5e-0x30,0x73-0x30,0x73-0x30,0x3d-0x30,0x01-0x30,    
  28            7,8,9,  
  29          };
  30          uchar value;                
  31          uchar fuhao,TABE;  //fuhao 储存+，-，*，/，clr，= ；TABE 标识   1是符  0是数
  32          float Table_A,Table_B;     //Table_A,Table_B 储存输入的两个数字
  33          long SUM,YU;
  34          
  35          
  36          
  37          int zheng_int,xiao_in_int,xiao_out_int;
  38          
  39          
  40          
  41          //=======================================================================延时函数=========================
             -==================  
  42          void delay10ms()   //误差 0us
  43          {
  44   1          unsigned char a,b,c;
  45   1          for(c=5;c>0;c--)
  46   1              for(b=4;b>0;b--)
  47   1                  for(a=248;a>0;a--);
  48   1      }
  49          //=========================================================================初始化=========================
             -====================
  50          void Init()
  51          { 
  52   1        fuhao=0;
C51 COMPILER V9.54   MAIN                                                                  11/07/2023 00:06:31 PAGE 2   

  53   1        TABE=0;
  54   1        Table_A=0;
  55   1        Table_B=0;
  56   1      }
  57          //=========================================================================扫描函数=======================
             -====================
  58          void Keydown()
  59          {
  60   1        char a,i;
  61   1        i=0;
  62   1        Key_Net=0x0ff;  ////列初始值    Key_Net - P1
  63   1        Key_P2 = 0x00;
  64   1        if(Key_Net!=0xff) ////按键按下
  65   1        {
  66   2          delay10ms();
  67   2          if(Key_Net!= 0xff)  ////按键消抖
  68   2          {
  69   3            Key_P2 = 0x00;
  70   3            switch(Key_Net)
  71   3            {
  72   4              case(0x7f) : value = 7 ;break;  //0111 1111 第一列
  73   4              case(0xbf) : value = 6 ;break;  //1011 1111
  74   4              case(0xdf) : value = 5 ;break;  //1101 1111
  75   4              case(0xef) : value = 4 ;break;  //1110 1111
  76   4              case(0xf7) : value = 3 ;break;  //1111 0111
  77   4              case(0xfb) : value = 2 ;break;  //1111 1011
  78   4              case(0xfd) : value = 1 ;break;  //1111 1101
  79   4              case(0xfe) : value = 0 ;break;  //1111 1110
  80   4            }       
  81   3            
  82   3            Key_Net = 0x00;
  83   3            Key_P2 = 0xff;
  84   3            delay10ms();
  85   3            switch(Key_P2)
  86   3            {
  87   4              case(0xfe) : value = value+0 ;break;  //1111 1110 //行+列 0+0
  88   4              case(0xfd) : value = value+8 ;break;  //1111 1101 
  89   4              case(0xfb) : value = value+16 ;break; //1111 1011
  90   4            }
  91   3            while((a<100)&&(Key_P2!=0xff))  //松手检测
  92   3            {
  93   4              delay10ms();
  94   4              a++;
  95   4            }
  96   3              a=0;
  97   3          }         
  98   2          
  99   2      
 100   2            if((0<=value)&&(value<=2)||(8<=value)&&(value<=10)||(16<=value)&&(value<=18)||value==3) //键盘按下0-9
 101   2            {
 102   3              TABE=0; ////TABE = 0;表示是数字
 103   3                //SHUZI=0;
 104   3              if(fuhao==0)
 105   3              {
 106   4                Table_A=Table_A*10+number[value];  //按下一位储存在个位，再按下一位原来的数*10加上刚按下的值
 107   4      
 108   4              }
 109   3              if((fuhao>0))
 110   3              {
 111   4                Table_B=Table_B*10+number[value];  //当有符号位按下后面的值储存在Table_B中 
 112   4      
 113   4              }
C51 COMPILER V9.54   MAIN                                                                  11/07/2023 00:06:31 PAGE 3   

 114   3                Lcd1602_Write_dat(0x30+number[value]);
 115   3            }
 116   2            
 117   2            
 118   2            
 119   2            
 120   2            
 121   2            if(value==4)  //  键盘按下+   也可以写成SWITCH语句
 122   2            {
 123   3                TABE=1; ////TABE = 1;表示符号
 124   3              fuhao=1;  // +号标志
 125   3              Lcd1602_Write_dat(0x30+number[value]);
 126   3            }
 127   2      
 128   2            if(value==5)  //  键盘按下-
 129   2            {
 130   3                TABE=1;
 131   3              fuhao=2;  // -号标志
 132   3              Lcd1602_Write_dat(0x30+number[value]);      
 133   3            }
 134   2      
 135   2            if(value==6)  //  键盘按下*
 136   2            {
 137   3                TABE=1;
 138   3              fuhao=3;  // -号标志
 139   3              Lcd1602_Write_dat(0x30+number[value]);      
 140   3            }
 141   2      
 142   2            if(value==7)  //  键盘按下/
 143   2            {
 144   3                TABE=1;
 145   3              fuhao=4;  // /号标志
 146   3              Lcd1602_Write_dat(0x30+number[value]);      
 147   3            }
 148   2      
 149   2            if(value==15)  //  键盘按e
 150   2            {
 151   3                TABE=1;
 152   3              fuhao=5;  // e标志
 153   3              Lcd1602_Write_com(0x30+number[value]);
 154   3              fuhao=0;
 155   3              TABE=0;
 156   3              Table_A=0;
 157   3              Table_B=0;      
 158   3            }
 159   2            
 160   2            
 161   2            
 162   2            
 163   2      //################################      
 164   2            if(value==12)  //  键盘按sin
 165   2            {
 166   3                TABE=1;
 167   3              fuhao=6;  // sin标志
 168   3              Lcd1602_Write_dat(0x30+number[value]);
 169   3            }
 170   2            
 171   2            if(value==13)  //  键盘按cos
 172   2            {
 173   3                TABE=1;
 174   3              fuhao=7;  // cos标志
 175   3              Lcd1602_Write_dat(0x30+number[value]);
C51 COMPILER V9.54   MAIN                                                                  11/07/2023 00:06:31 PAGE 4   

 176   3            }
 177   2            
 178   2            if(value==11)  //  键盘按^---阶乘
 179   2            {
 180   3                TABE=1;
 181   3              fuhao=8;  // ^阶乘标志
 182   3              Lcd1602_Write_dat(0x30+number[value]);
 183   3            }         
 184   2      //################################  
 185   2      
 186   2            
 187   2            
 188   2            
 189   2            
 190   2            
 191   2            
 192   2            if(value==14) //  键盘按下=后直接显示
 193   2            {
 194   3      //--------------------------------------------------------------------加法--------------------------------
             -----------------
 195   3              if(fuhao==1)  //加法  ////fuhao=1;  // +号标志
 196   3              { 
 197   4                SUM=Table_A+Table_B;
 198   4                Lcd1602_Write_com(0Xcf); //从第二行最右边开始显示
 199   4                Lcd1602_Write_com(0X04); //指针左移
 200   4                while(SUM!=0)      //一位一位显示
 201   4                    {
 202   5                      Lcd1602_Write_dat(0x30+SUM%10);   //显示结果的最后一位在0x4f的位置
 203   5                      SUM=SUM/10;             //取前面的结果数据  
 204   5                    }
 205   4                Lcd1602_Write_dat(0x3d);            //写等于号
 206   4              }
 207   3      //-----------------------------------------------------------------------减法-----------------------------
             -------------------
 208   3              if(fuhao==2)  //减法  ////fuhao=2;  // -号标志
 209   3              { 
 210   4                if(Table_A>Table_B)
 211   4                {
 212   5                  SUM=Table_A - Table_B;
 213   5                }
 214   4                else
 215   4                {
 216   5                  SUM=Table_B - Table_A;
 217   5                }
 218   4                  Lcd1602_Write_com(0Xcf);
 219   4                  Lcd1602_Write_com(0X04);
 220   4                  while(SUM!=0)     //一位一位显示
 221   4                      {
 222   5                        Lcd1602_Write_dat(0x30+SUM%10);   //显示结果的最后一位在0x4f的位置
 223   5                        SUM=SUM/10;             //取前面的结果数据  
 224   5                      }
 225   4                  if(Table_A < Table_B)
 226   4                  {
 227   5                    Lcd1602_Write_dat(0x2d);
 228   5                  }
 229   4                  Lcd1602_Write_dat(0x3d);            //写等于号
 230   4              }
 231   3      //-----------------------------------------------------------------------------乘法-----------------------
             ---------------------
 232   3              if(fuhao==3)  //乘法  ////fuhao=3;  // -号标志
 233   3              { 
 234   4                SUM=(Table_A)*(Table_B);
C51 COMPILER V9.54   MAIN                                                                  11/07/2023 00:06:31 PAGE 5   

 235   4                Lcd1602_Write_com(0Xcf);
 236   4                Lcd1602_Write_com(0X04);
 237   4                while(SUM!=0)     //一位一位显示
 238   4                    {
 239   5                      Lcd1602_Write_dat(0x30+SUM%10);   //显示结果的最后一位在0x4f的位置
 240   5                      SUM=SUM/10;             //取前面的结果数据  
 241   5                    }
 242   4                Lcd1602_Write_dat(0x3d);            //写等于号
 243   4              }
 244   3      //----------------------------------------------------------------------------除法------------------------
             ---------------------
 245   3              if(fuhao==4)  //除法  ////fuhao=4;  // /号标志
 246   3              {
 247   4                uchar i;
 248   4                SUM=((Table_A/Table_B)*10000);      
 249   4                Lcd1602_Write_com(0Xcf);
 250   4                Lcd1602_Write_com(0X04);
 251   4                if((Table_A < Table_B)&&SUM<100)    //当两个数差100倍时
 252   4                {
 253   5                while(SUM!=0)     //一位一位显示
 254   5                    {
 255   6                      i++;
 256   6                      Lcd1602_Write_dat(0x30+SUM%10);   //显示结果的最后一位在0x4f的位置
 257   6                      SUM=SUM/10;
 258   6                      if(i==2)  
 259   6                      {
 260   7                      Lcd1602_Write_dat(0x30);
 261   7                      Lcd1602_Write_dat(0x2e);
 262   7                      i=0;
 263   7                      }       
 264   6                    }
 265   5                }
 266   4                while(SUM!=0)     //两个数差10倍时SUM为3位数
 267   4                    {
 268   5                      i++;
 269   5                      Lcd1602_Write_dat(0x30+SUM%10);   //显示结果的最后一位在0x4f的位置
 270   5                      SUM=SUM/10;
 271   5                      
 272   5                      if(i==3)              //改变num的倍数和i的值可以改变保留小数的大小
 273   5                      {
 274   6                      Lcd1602_Write_dat(0x2e);
 275   6                      i=0;
 276   6                      }
 277   5                    } 
 278   4                if(Table_A < Table_B)
 279   4                {
 280   5                Lcd1602_Write_dat(0x30);
 281   5                }
 282   4                Lcd1602_Write_dat(0x3d);            //写等于号
 283   4              
 284   4              }
 285   3              
 286   3      //#####################################################       
 287   3      //-----------------------------------------------------------------------------sin------------------------
             --------------------
 288   3              if(fuhao==6)  //sin ////fuhao=6;  // sin标志
 289   3              { 
 290   4      
 291   4                Table_B = (Table_B*PI) / 180.0;
 292   4                Table_B= cos(Table_B);
 293   4                zheng_int = (int)Table_B;
 294   4                xiao_in_int = (int)Table_B*100;
C51 COMPILER V9.54   MAIN                                                                  11/07/2023 00:06:31 PAGE 6   

 295   4                xiao_out_int = xiao_in_int%100;
 296   4                
 297   4                
 298   4                
 299   4                Lcd1602_Write_com(0Xcf);
 300   4                Lcd1602_Write_com(0X04);
 301   4                
 302   4                
 303   4                
 304   4      //          Lcd1602_Write_dat(0x30+zheng_int%10);
 305   4                Lcd1602_Write_dat(0x2e);
 306   4      //          while(xiao_out_int != 0)
 307   4      //          {
 308   4      //            Lcd1602_Write_dat(0x30+xiao_out_int%10);
 309   4      //            xiao_out_int /= 10;
 310   4      //          }
 311   4      //          
 312   4      
 313   4                
 314   4              
 315   4      //          while(SUM!=0)     //一位一位显示
 316   4      //              {
 317   4      //                Lcd1602_Write_dat(0x30+SUM%10);   //显示结果的最后一位在0x4f的位置
 318   4      //                SUM=SUM/10;             //取前面的结果数据  
 319   4      //              }
 320   4                Lcd1602_Write_dat(0x3d);            //写等于号
 321   4              }
 322   3      
 323   3      
 324   3      //        if(fuhao==7)  //cos ////fuhao=7;  // cos标志
 325   3      //        { 
 326   3      //          SUM=(Table_A)*(Table_B);
 327   3      //          Lcd1602_Write_com(0Xcf);
 328   3      //          Lcd1602_Write_com(0X04);
 329   3      //          while(SUM!=0)     //一位一位显示
 330   3      //              {
 331   3      //                Lcd1602_Write_dat(0x30+SUM%10);   //显示结果的最后一位在0x4f的位置
 332   3      //                SUM=SUM/10;             //取前面的结果数据  
 333   3      //              }
 334   3      //          Lcd1602_Write_dat(0x3d);            //写等于号
 335   3      //        }       
 336   3      
 337   3      
 338   3              if(fuhao==8)  //^乘方 ////fuhao=8;  // ^阶乘标志
 339   3              { 
 340   4                SUM=pow(Table_A,Table_B);
 341   4                Lcd1602_Write_com(0Xcf);
 342   4                Lcd1602_Write_com(0X04);
 343   4                while(SUM!=0)     //一位一位显示
 344   4                    {
 345   5                      Lcd1602_Write_dat(0x30+SUM%10);   //显示结果的最后一位在0x4f的位置
 346   5                      SUM=SUM/10;             //取前面的结果数据  
 347   5                    }
 348   4                Lcd1602_Write_dat(0x3d);            //写等于号
 349   4              }               
 350   3              
 351   3      //#####################################################           
 352   3              
 353   3              
 354   3              
 355   3            }  
 356   2      
C51 COMPILER V9.54   MAIN                                                                  11/07/2023 00:06:31 PAGE 7   

 357   2        } 
 358   1      }
 359          //========================================================主函数==========================================
             -=========================
 360          void main()
 361          {
 362   1      //  uchar i;
 363   1        Lcd_Init();   //初始化LCD
 364   1      //  for(i=0;i<16;i++)
 365   1      //  {
 366   1      //    Lcd1602_Write_dat(display[i]);
 367   1      //  }
 368   1          while(1)
 369   1        {
 370   2          Keydown();
 371   2      //    Lcd1602_Write_com(0X80);
 372   2      //    Lcd1602_Write_dat(0x30+number[value]);
 373   2        }
 374   1      }
 375            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1476    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
